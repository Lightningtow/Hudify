plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.hudify_version
group = project.maven_group

base { archivesName = project.archives_base_name }

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	maven {
		url = "https://api.modrinth.com/maven"
		content { includeGroup "maven.modrinth" }
	}
	maven { url "https://maven.terraformersmc.com/releases/" }
//	maven {	url = "https://api.modrinth.com/maven" }
}

loom {
	runConfigs.server { ideConfigGenerated(false) } // prevent intelliJ from auto-creating the 'Minecraft Server' run config, you can safely delete this
}
dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation ("com.terraformersmc:modmenu:${project.modmenu_version}") // { exclude module: "fabric-api" }
	modImplementation include("maven.modrinth:midnightlib:${project.midnightlib_version}") // bundles jar-in-jar
//	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
//	include "maven.modrinth:midnightlib:${project.midnightlib_version}"


//	modImplementation files("run/mods/custom_hud-${project.customhud_version}.jar")
//	modImplementation "maven.modrinth:customhud:${project.customhud_version}"

//	modImplementation files("run/mods/custom_hud-4.0.0-beta.331.20.4.jar")       // 4.0
	modImplementation "maven.modrinth:customhud:3.3.2+1.20.4"  // 3.3

}
def fabricModInfoJson() {
	def customhud_version = 3.3
//	def customhud_version = 4.0


	Map info = [
			"schemaVersion": 1,
			"id": "hudify",
			"version": "${version}",
			"name": "Hudify",
			"description": "Passes Spotify info to CustomHud",
			"authors": [ "Lightningtow" ],
			"contact": [
				"homepage": "https://github.com/Lightningtow/Hudify",
				"sources": "https://github.com/Lightningtow/Hudify",
				"issues": "https://github.com/Lightningtow/Hudify/issues"
			],
			"license": "CC0-1.0",
			"icon": "assets/hudify/icon.png",
			"environment": "client",
			"entrypoints": [
				"client": [ "lightningtow.hudify.HudifyMain" ],
				"modmenu": [ "ModMenuIntegration" ]
			],
			"depends": [
				"fabricloader": ">=0.15.0",
				"minecraft": "~1.20.4",
				"java": ">=17",
				"fabric-api": "*",
			],
			"custom": [
				"modmenu": [
					"links": [
						"modmenu.discord": "https://discord.com/invite/BYSCX96fyt"
					],
					"update_checker": true
				]
			]
	]
	if (customhud_version == 3.3) {
		info.depends += [ "custom_hud": ">=3.3.0- <4.0-" ]
	}
	else {
		info.depends += [ "custom_hud": "*" ]
	}

	return info
}
tasks.create(name: "generateModInfoJson", type: DefaultTask) {
	doLast {
		def output = file("build/resources/client/fabric.mod.json")
		mkdir output.parentFile
		output.text = new groovy.json.JsonBuilder(fabricModInfoJson()).toPrettyString()
		def output2 = file("src/main/resources/fabric.mod.json")
		mkdir output2.parentFile
		output2.text = new groovy.json.JsonBuilder(fabricModInfoJson()).toPrettyString()
	}
}

processResources {
	dependsOn(generateModInfoJson)
}
processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach { it.options.release = 17 }

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17 	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	targetCompatibility = JavaVersion.VERSION_17	// if it is present. If you remove this line, sources will not be generated.
}

jar {
	from("LICENSE") {
		rename {
			"${it}_${project.base.archivesName.get()}"
		}
	}
}
